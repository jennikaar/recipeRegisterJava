package leivonta.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import leivonta.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2019.04.26 11:12:20 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class ReseptiTest {



  // Generated by ComTest BEGIN
  /** testGetNimi27 */
  @Test
  public void testGetNimi27() {    // Resepti: 27
    Resepti juustokakku = new Resepti(); 
    juustokakku.vastaaJuustokakku(); 
    { String _l_=juustokakku.getNimi(),_r_="Juustokakku"; if ( !_l_.matches(_r_) ) fail("From: Resepti line: 30" + " does not match: ["+ _l_ + "] != [" + _r_ + "]");}; 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone105 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone105() throws CloneNotSupportedException {    // Resepti: 105
    Resepti resepti = new Resepti(); 
    resepti.parse("   1  |  Juustokakku   | juustokakut"); 
    Resepti kopio = resepti.clone(); 
    assertEquals("From: Resepti line: 110", resepti.toString(), kopio.toString()); 
    resepti.parse("  2  |  Juustokakku   | juustokakut"); 
    assertEquals("From: Resepti line: 112", false, kopio.toString().equals(resepti.toString())); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse159 */
  @Test
  public void testParse159() {    // Resepti: 159
    Resepti resepti = new Resepti(); 
    resepti.parse("   1  |  Juustokakku   | juustokakut"); 
    assertEquals("From: Resepti line: 162", 1, resepti.getTunnusNro()); 
    assertEquals("From: Resepti line: 163", true, resepti.toString().startsWith("1|Juustokakku|juustokakut|")); 
    resepti.rekisteroi(); 
    int n = resepti.getTunnusNro(); 
    resepti.parse(""+(n+20)); 
    resepti.rekisteroi(); 
    assertEquals("From: Resepti line: 169", 20+n+1, resepti.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEquals192 */
  @Test
  public void testEquals192() {    // Resepti: 192
    Resepti resepti1 = new Resepti(); 
    resepti1.parse("   1  |  Juustokakku   | juustokakut"); 
    Resepti resepti2 = new Resepti(); 
    resepti2.parse("   1  |  Juustokakku   | juustokakut"); 
    Resepti resepti3 = new Resepti(); 
    resepti3.parse("   2  |  Korvapuustit   | pullat"); 
    assertEquals("From: Resepti line: 199", true, resepti1.equals(resepti2)); 
    assertEquals("From: Resepti line: 200", true, resepti2.equals(resepti1)); 
    assertEquals("From: Resepti line: 201", false, resepti1.equals(resepti3)); 
    assertEquals("From: Resepti line: 202", false, resepti3.equals(resepti2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString220 */
  @Test
  public void testToString220() {    // Resepti: 220
    Resepti resepti = new Resepti(); 
    resepti.parse("   1  |  Juustokakku   | juustokakut"); 
    assertEquals("From: Resepti line: 223", true, resepti.toString().startsWith("1|Juustokakku|juustokakut|")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi256 */
  @Test
  public void testRekisteroi256() {    // Resepti: 256
    Resepti juustokakku = new Resepti(); 
    juustokakku.getTunnusNro(); 
    juustokakku.rekisteroi(); 
    Resepti juustokakku2 = new Resepti(); 
    juustokakku2.rekisteroi(); 
    int j1 = juustokakku.getTunnusNro(); 
    int j2 = juustokakku2.getTunnusNro(); 
    assertEquals("From: Resepti line: 264", j2-1, j1); 
  } // Generated by ComTest END
}